!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BUFF_SIZE	main_task.h	/^#define BUFF_SIZE /;"	d
LIGHT_SENSOR_TASK_EXEC_NAME	main_task.h	/^#define LIGHT_SENSOR_TASK_EXEC_NAME /;"	d
LIGHT_TASK_PORT_NUM	main_task.h	/^#define LIGHT_TASK_PORT_NUM /;"	d
LIGHT_TASK_QUEUE_SIZE	main_task.h	/^#define LIGHT_TASK_QUEUE_SIZE	/;"	d
LIGHT_TASK_UNALIVE_CNT_LOG_LIMIT	main_task.h	/^#define LIGHT_TASK_UNALIVE_CNT_LOG_LIMIT /;"	d
LOGGER_ATTR_LEN	main_task.h	/^#define LOGGER_ATTR_LEN /;"	d
LOGGER_TASK_EXEC_NAME	main_task.h	/^#define LOGGER_TASK_EXEC_NAME /;"	d
LOGGER_TASK_PORT_NUM	main_task.h	/^#define LOGGER_TASK_PORT_NUM /;"	d
LOGGER_TASK_QUEUE_SIZE	main_task.h	/^#define LOGGER_TASK_QUEUE_SIZE	/;"	d
LOGGER_TASK_UNALIVE_CNT_LOG_LIMIT	main_task.h	/^#define LOGGER_TASK_UNALIVE_CNT_LOG_LIMIT /;"	d
MSG_BUFF_MAX_LEN	main_task.h	/^#define MSG_BUFF_MAX_LEN /;"	d
MSG_MAX_LEN	main_task.h	/^#define MSG_MAX_LEN /;"	d
MSG_QUEUE_MAX_MSG_SIZE	main_task.h	/^#define MSG_QUEUE_MAX_MSG_SIZE /;"	d
MSG_QUEUE_MAX_NUM_MSGS	main_task.h	/^#define MSG_QUEUE_MAX_NUM_MSGS /;"	d
MSG_QUEUE_NAME	main_task.h	/^#define MSG_QUEUE_NAME /;"	d
SENSOR_TASK_SOCK_IP_ADDR	main_task.h	/^#define SENSOR_TASK_SOCK_IP_ADDR /;"	d
SOCKET_TASK_EXEC_NAME	main_task.h	/^#define SOCKET_TASK_EXEC_NAME /;"	d
SOCKET_TASK_PORT_NUM	main_task.h	/^#define SOCKET_TASK_PORT_NUM /;"	d
SOCKET_TASK_QUEUE_SIZE	main_task.h	/^#define SOCKET_TASK_QUEUE_SIZE	/;"	d
SOCK_TASK_UNALIVE_CNT_LOG_LIMIT	main_task.h	/^#define SOCK_TASK_UNALIVE_CNT_LOG_LIMIT /;"	d
TEMP_SENSOR_TASK_EXEC_NAME	main_task.h	/^#define TEMP_SENSOR_TASK_EXEC_NAME /;"	d
TEMP_TASK_PORT_NUM	main_task.h	/^#define TEMP_TASK_PORT_NUM /;"	d
TEMP_TASK_QUEUE_SIZE	main_task.h	/^#define TEMP_TASK_QUEUE_SIZE	/;"	d
TEMP_TASK_UNALIVE_CNT_LOG_LIMIT	main_task.h	/^#define TEMP_TASK_UNALIVE_CNT_LOG_LIMIT /;"	d
_MAIN_TASK_H_	main_task.h	/^#define _MAIN_TASK_H_$/;"	d
_logger_msg_struct_	main_task.h	/^struct _logger_msg_struct_                                                                            $/;"	s
check_status_of_sub_tasks	main_task.c	/^void check_status_of_sub_tasks(void)$/;"	f
check_subtask_status	main_task.c	/^void check_subtask_status(int sock_fd, char *task_name)$/;"	f
create_sub_process	main_task.c	/^void create_sub_process(char *process_name)$/;"	f
create_sub_processes	main_task.c	/^void create_sub_processes(void)$/;"	f
g_kill_main_task	main_task.h	/^sig_atomic_t g_kill_main_task;$/;"	v
initialize_sub_task_socket	main_task.c	/^void initialize_sub_task_socket(int *sock_fd, struct sockaddr_in *sock_addr_struct, int port_num)$/;"	f
kill_already_created_processes	main_task.c	/^void kill_already_created_processes(void)$/;"	f
light_task_sock_addr	main_task.h	/^struct sockaddr_in temp_task_sock_addr, light_task_sock_addr;$/;"	v	typeref:struct:
light_task_sockfd	main_task.h	/^int temp_task_sockfd, light_task_sockfd; $/;"	v
light_task_unalive_count	main_task.h	/^int temp_task_unalive_count, light_task_unalive_count;$/;"	v
log_task_unalive_msg_to_log_file	main_task.c	/^void log_task_unalive_msg_to_log_file(char *task_name)$/;"	f
logger_mq_handle	main_task.h	/^mqd_t logger_mq_handle;$/;"	v
logger_msg_level	main_task.h	/^    char logger_msg_level[LOGGER_ATTR_LEN];$/;"	m	struct:_logger_msg_struct_
logger_msg_src_id	main_task.h	/^    char logger_msg_src_id[LOGGER_ATTR_LEN];$/;"	m	struct:_logger_msg_struct_
logger_task_sock_addr	main_task.h	/^struct sockaddr_in socket_task_sock_addr, logger_task_sock_addr;$/;"	v	typeref:struct:
logger_task_sockfd	main_task.h	/^int socket_task_sockfd, logger_task_sockfd;$/;"	v
logger_task_unalive_count	main_task.h	/^int logger_task_unalive_count, socket_task_unalive_count;$/;"	v
main	main_task.c	/^int main(void)$/;"	f
message	main_task.h	/^    char message[MSG_MAX_LEN]; $/;"	m	struct:_logger_msg_struct_
perform_startup_test	main_task.c	/^void perform_startup_test(void)$/;"	f
perform_sub_task_startup_test	main_task.c	/^int perform_sub_task_startup_test(int sock_fd, char *proc_name)$/;"	f
sig_handler	main_task.c	/^void sig_handler(int sig_num)$/;"	f
socket_task_sock_addr	main_task.h	/^struct sockaddr_in socket_task_sock_addr, logger_task_sock_addr;$/;"	v	typeref:struct:sockaddr_in
socket_task_sockfd	main_task.h	/^int socket_task_sockfd, logger_task_sockfd;$/;"	v
socket_task_unalive_count	main_task.h	/^int logger_task_unalive_count, socket_task_unalive_count;$/;"	v
stop_entire_system	main_task.c	/^void stop_entire_system(void)$/;"	f
temp_task_sock_addr	main_task.h	/^struct sockaddr_in temp_task_sock_addr, light_task_sock_addr;$/;"	v	typeref:struct:sockaddr_in
temp_task_sockfd	main_task.h	/^int temp_task_sockfd, light_task_sockfd; $/;"	v
temp_task_unalive_count	main_task.h	/^int temp_task_unalive_count, light_task_unalive_count;$/;"	v
turn_on_usr_led	main_task.c	/^void turn_on_usr_led(void)$/;"	f
write_pid_to_file	main_task.c	/^void write_pid_to_file(char *proc_name, pid_t child_pid)$/;"	f
